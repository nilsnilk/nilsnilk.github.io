(self.webpackChunknils_sundberg_portfolio=self.webpackChunknils_sundberg_portfolio||[]).push([[31],{9756:function(e,t,n){"use strict";function o(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}n.d(t,{Z:function(){return o}})},6905:function(e,t,n){"use strict";n.r(t),n.d(t,{_frontmatter:function(){return i},default:function(){return d}});var o=n(9756),r=(n(7294),n(4983)),a=["components"],i={title:"Mapdraw",image:"mapdraw2.png"},s={_frontmatter:i};function d(e){var t=e.components,n=(0,o.Z)(e,a);return(0,r.mdx)("wrapper",Object.assign({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.mdx)("h2",null,"Project Summary"),(0,r.mdx)("p",null,"This project was part of a course at Ume√• University, where the objective was to create a prototype for a mobile application."),(0,r.mdx)("p",null,'Me and the rest of my group decided to make a GPS-position based game where the users could "draw" on a map by walking around. The user would push a button which left a trail behind them on the map when they moved. We wanted the user to be able to change color and thickness of the trail. Lastly, we wanted that other users could see the drawings on their devices as they were made in real-time.'),(0,r.mdx)("p",null,"In order to do this we first decided to create a client for IOS with Swift and a server built with Node.js, MongoDB, Mongoose and socket.io. Even though the server was ready to go we decided to scrap the real-time solution; we determined that we didn't have the time needed in order to implement the sockets on the client-side. In the end we ended up with a solution where the user can choose whether they want to upload the drawing or not. In the socket.io-based solution required the client to continually send its position to the server. The solution we settled with only needed to post the drawing once to the database, which was fairly easy to implement with MongoDB and Mongoose. "),(0,r.mdx)("h3",null,"Role"),(0,r.mdx)("p",null,"Developer, Front End Designer"),(0,r.mdx)("h3",null,"Gallery"),(0,r.mdx)("p",null,(0,r.mdx)("img",{parentName:"p",src:"mapdraw.png",alt:"Image of user interface"}),"\n",(0,r.mdx)("em",{parentName:"p"},"User interface of the final prototype, with drawings visible on the screen. The button at the bottom of the screen starts the drawing process. When the button is held, the icon will be changed to indicate that user currently is drawing. Current color is indicated by the position marker, which is visible to the left side of the screen. ")),(0,r.mdx)("p",null,(0,r.mdx)("img",{parentName:"p",src:"mapdraw3.png",alt:"Image of user interface"}),"\n",(0,r.mdx)("em",{parentName:"p"},"When the user is done with the drawing it can swipe to the plus-sign in order to store the drawing in the database... ")),(0,r.mdx)("p",null,(0,r.mdx)("img",{parentName:"p",src:"mapdraw4.png",alt:"Image of user interface"}),"\n",(0,r.mdx)("em",{parentName:"p"},"... Or if the user want to discard the drawing, it can swipe to the x-sign. ")),(0,r.mdx)("p",null,(0,r.mdx)("img",{parentName:"p",src:"mapdraw5.png",alt:"Image of user interface"}),"\n",(0,r.mdx)("em",{parentName:"p"},"The color choice menu will appear if the user presses the position indicator, where up-down movement determines the color and left-right determines shade. ")))}d.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-pages-projects-mapdraw-mdx-d4944a3a938bcba40e63.js.map